name: Deploy to Server

on:
  push:
    branches:
      - main
      - master  # Support both common default branches
  workflow_dispatch:  # Allow manual triggers

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server and run setup
        env:
          SERVER_IP: 173.212.251.191
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASS: ${{ secrets.SERVER_PASS }}
        run: |
          echo "üîë Connecting to server..."
          sshpass -p "$SERVER_PASS" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            set -e
            echo "üì¶ Updating repo..."
            cd elfatih_backend || {
              echo "üì• Creating directory and cloning repository..."
              mkdir -p elfatih_backend
              cd elfatih_backend
              git clone https://github.com/ShehapAltahawy59/elfatih_backend.git .
            }
            
            if [ -d ".git" ]; then
              echo "üîÑ Pulling latest changes..."
              git pull origin main || git pull origin master
            else
              echo "‚ùå Git repository not found!"
              exit 1
            fi

            echo "üìÇ Setting up virtual environment..."
            if [ ! -d "elfatih_venv" ]; then
              python3 -m venv elfatih_venv
            fi
            source elfatih_venv/bin/activate

            echo "üì¶ Installing requirements..."
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "üîß Setting up systemd service..."
            # Kill any existing process
            pkill -f "python.*main.py" || true
            
            # Start the application in background
            nohup python3 main.py > app.log 2>&1 &
            
            echo "‚è≥ Waiting for application to start..."
            sleep 5
            
            # Check if application is running
            if pgrep -f "python.*main.py" > /dev/null; then
              echo "‚úÖ Application started successfully!"
            else
              echo "‚ùå Application failed to start. Check app.log"
              tail -20 app.log
              exit 1
            fi

            echo "‚úÖ Deployment complete!"
          EOF
